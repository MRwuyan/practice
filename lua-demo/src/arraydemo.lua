---
--- Generated by Luanalysis
--- Created by cxp.
--- DateTime: 2023-09-09 17:10
---
-- 创建一个数组
local myArray = { 10, 20, 30, 40, 50 }
for i, v in ipairs(myArray) do
    print(i .. '=' .. v)
end
-- 循环遍历数组
for i = 1, #myArray do
    print(myArray[i])
end
function square(iteratorMaxCount, currentNumber)
    print("--------------------------")
    if currentNumber < iteratorMaxCount
    then
        currentNumber = currentNumber + 1
        return currentNumber, currentNumber * currentNumber
    end
end

for i, n in square, 3, 0
do
    print(i, n)
end
--非闭包写法
function myPairs(arr)
    print('myPairs-------------')
    return iter, arr, 0
end
function iter(a, i)
    print('----------iter init-----')
    i = i + 1;
    temp = a[i];
    if temp then
        return i, temp
    end
end
--闭包写法
function myPairs1(arr)
    print('myPairs1-------------')
    local i =0;
    return function()
        i=i+1;
        temp = arr[i];
        if temp then
            return i, temp
        end
    end
end
for i, v in myPairs1(myArray) do
    print(i .. '==' .. v)
end

function elementIterator(arr)
    print("elementIterator init")
    local index = 0;
    local len = #arr
    return function()
        print('闭包---init')
        index = index + 1;
        if index <= len
        then
            return arr[index]
        end
    end
end
function elementIterator1(arr)
    print("elementIterator1 init")
    local index = 0;
    return iter2,arr,0
end
function iter2(arr,index)

    local len =#arr
    print('index'..index..'len'..len)
    index=index+1
    if index<=len then
        return index,arr[index]
    end
end
for element in elementIterator1(myArray) do
    print('element=' .. element)
end
